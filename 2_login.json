{
	"info": {
		"_postman_id": "68c24847-23fe-438e-933c-6bcfb7135f55",
		"name": "2_login",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25141520"
	},
	"item": [
		{
			"name": "login com success",
			"item": [
				{
					"name": "signup - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function firstName() {\r",
									"    \r",
									"    let firstName = [\"Andreson\", \"Capi\", \"Arthur\", \"Luiz\", \"Davi\"];\r",
									"\r",
									"    let randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"\r",
									"    return randomItem\r",
									"\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FirstName\", firstName());\r",
									"\r",
									"\r",
									"function lastName() {\r",
									"    \r",
									"    let lastName = [\"Dos Santos\", \"Alves\", \"Da Silva\", \"Henrique\", \"Filipe\", \"Miguel\"];\r",
									"\r",
									"    let randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"\r",
									"    return randomItem\r",
									"\r",
									"}\r",
									"\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"function accessProfile() {\r",
									"    \r",
									"    let accessProfile = [\"ADMIN\", \"FINANCEIRO\", \"CONTROLADORIA\", \"RH\"];\r",
									"\r",
									"    let randomItem = accessProfile[Math.floor(Math.random() * accessProfile.length)];\r",
									"\r",
									"    return randomItem\r",
									"\r",
									"}\r",
									"\r",
									"pm.environment.set(\"AccessProfile\", accessProfile());\r",
									"\r",
									"\r",
									"\r",
									"function providerMail() {\r",
									"    \r",
									"    let providerEmail = [\"@gmail.com\", \"@yahoo.com\", \"@terra.com\", \"@hotmail.com\"];\r",
									"\r",
									"    let randomItem = providerMail[Math.floor(Math.random() * providerMail.length)];\r",
									"\r",
									"    return randomItem\r",
									"\r",
									"}\r",
									"\r",
									"pm.environment.set(\"ProviderMail\", providerMail());\r",
									"\r",
									"pm.environment.set(\"Mail\", pm.environment.get(\"FirstName\") + \"_\" + pm.variables.replaceIn('{{$randomEmail}}'))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// como capturar um objeto no body\r",
									"\r",
									"pm.test(\"Check is token exist\", function () {\r",
									"    pm.expect(JSON.parse(responseBody).token)\r",
									"    console.log((JSON.parse(responseBody).token))\r",
									"});\r",
									"\r",
									"pm.test(\"Check is fullName true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName)\r",
									"});\r",
									"\r",
									"pm.test(\"Check is mail true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).user.mail)\r",
									"});\r",
									"\r",
									"pm.test(\"Check is accessProfile true\", function () {\r",
									"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile)\r",
									"});\r",
									"\r",
									"pm.test(\"Check is accessProfile true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status)\r",
									"});\r",
									"\r",
									"// pm.test(\"Status code is 201\", function () {\r",
									"//     pm.response.to.have.status(201);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Check FullName is True\", function () {\r",
									"//     pm.expect(pm.variables.get(\"FullName\")).to.eql(JSON.parse(responseBody).fullName)\r",
									"// });\r",
									"\r",
									"// pm.test(\"Check Description is True\", function () {\r",
									"//     pm.expect(pm.variables.get(\"Description\")).to.eql(JSON.parse(responseBody).Description)\r",
									"// });\r",
									"\r",
									"// pm.test(\"Check Stars is True\", function () {\r",
									"//     pm.expect(pm.variables.get(\"Stars\")).to.eql(JSON.parse(responseBody).Stars)\r",
									"// });\r",
									"\r",
									"// pm.test(\"Check situation is True\", function () {\r",
									"//     pm.expect(\"Pendente\").to.eql(JSON.parse(responseBody).situation)\r",
									"// });\r",
									"\r",
									"// pm.test(\"Check status is True\", function () {\r",
									"//     pm.expect(true).to.eql(JSON.parse(responseBody).status)\r",
									"// });\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"{{FullName}}\",\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\",\r\n    \"confirmPassword\": \"{{Password}}\",\r\n    \"accessProfile\": \"{{AccessProfile}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlbase}}/signup",
							"host": [
								"{{urlbase}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "login - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// como capturar um objeto no body\r",
									"\r",
									"pm.test(\"Check is token exist\", function () {\r",
									"    pm.expect(JSON.parse(responseBody).token)\r",
									"    console.log((JSON.parse(responseBody).token))\r",
									"});\r",
									"\r",
									"pm.test(\"Check is fullName true\", function () {\r",
									"    pm.expect(pm.environment.get(\"FullName\")).to.eql(JSON.parse(responseBody).user.fullName)\r",
									"});\r",
									"\r",
									"pm.test(\"Check is mail true\", function () {\r",
									"    pm.expect(pm.environment.get(\"Mail\")).to.eql(JSON.parse(responseBody).user.mail)\r",
									"});\r",
									"\r",
									"pm.test(\"Check is accessProfile true\", function () {\r",
									"    pm.expect(pm.environment.get(\"AccessProfile\")).to.eql(JSON.parse(responseBody).user.accessProfile)\r",
									"});\r",
									"\r",
									"pm.test(\"Check is accessProfile true\", function () {\r",
									"    pm.expect(true).to.eql(JSON.parse(responseBody).user.status)\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"{{Password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlbase}}/login",
							"host": [
								"{{urlbase}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}